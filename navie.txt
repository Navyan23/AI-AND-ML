import numpy as nm
import matplotlib.pyplot as plt
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.preprocessing import MinMaxScaler
from sklearn.naive_bayes import GaussianNB
from sklearn.metrics import confusion_matrix
from sklearn.metrics import accuracy_score

# Importing the dataset
dataset = pd.read_csv('User_Data.csv')
x = dataset.iloc[:, [2, 3]].values
y = dataset.iloc[:, 4].values

# Splitting the dataset into the Training set and Test set
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.25, random_state = 0)

type(x_train)

# Feature Scaling
sc = StandardScaler()
x_train1 = sc.fit_transform(x_train)
x_test1= sc.transform(x_test)

mn=MinMaxScaler()
x_train2 = mn.fit_transform(x_train)
x_test2 = mn.transform(x_test)

print(x_train1)

print(x_train2)



xtrain=x_train1+x_train2
print(xtrain)




# Fitting I Bayes to the Training set
classifier = GaussianNB()
classifier.fit(x_train, y_train)


# Predicting the Test set results
y_pred = classifier.predict(x_test)


# Making the Confusion Matrix
from sklearn.metrics import confusion_matrix
cm = confusion_matrix(y_test, y_pred)
print("Confusion Matrix : \n",cm)

print ("Accuracy : ", accuracy_score(y_test, y_pred))   


from sklearn import metrics
import numpy as np

y_pred=np.around(classifier.predict(x_test))
print(metrics.classification_report(y_test,y_pred))


plt.title("Age")
plt.hist(dataset.Age)
plt.show()
plt.title("EstimatedSalary")
plt.hist(dataset.EstimatedSalary)
plt.show()
